<UserControl
    x:Class="CoordinateConversionLibrary.Views.CCCollectTabView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prop="clr-namespace:CoordinateConversionLibrary.Properties"
    xmlns:converters="clr-namespace:CoordinateConversionLibrary.ValueConverters"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/CoordinateConversionLibrary;component/MAResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:MaxHeightConverter x:Key="maxHeightConverter" />
            <system:Double x:Key="adjMaxHeightAmount">20</system:Double>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="gridCollect">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
            <ListBox
                x:Name="listBoxCoordinates"
                Grid.Row="0"
                MinHeight="40"
                MaxHeight="{Binding ElementName=gridCollect, Path=ActualHeight, Converter={StaticResource maxHeightConverter}, ConverterParameter={StaticResource adjMaxHeightAmount}}"
                Margin="0,0,0,0"
                ItemsSource="{Binding CoordinateAddInPoints}"
                SelectedIndex="{Binding ListBoxSelectedIndex}"
                SelectedItem="{Binding ListBoxSelectedItem}"
                SelectionMode="Extended">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Text}" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ContextMenu>
                    <ContextMenu DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                        <MenuItem
                            Command="{Binding DataContext.DeletePointCommand}"
                            CommandParameter="{Binding Path=SelectedItems}"
                            Header="{x:Static prop:Resources.MenuLabelDelete}"
                            IsEnabled="{Binding DataContext.HasAnySelectedItems}" />
                        <MenuItem
                            Command="{Binding DataContext.DeleteAllPointsCommand}"
                            Header="{x:Static prop:Resources.MenuLabelDeleteAll}"
                            IsEnabled="{Binding HasItems}" />
                        <MenuItem
                            Command="{Binding DataContext.FlashPointCommand}"
                            CommandParameter="{Binding}"
                            Header="{x:Static prop:Resources.HeaderFlash}"
                            IsEnabled="{Binding DataContext.HasListBoxRightClickSelectedItem}" />
                        <MenuItem
                            Command="{Binding DataContext.CopyCoordinateCommand}"
                            CommandParameter="{Binding Path=SelectedItems}"
                            Header="{x:Static prop:Resources.MenuLabelCopy}"
                            IsEnabled="{Binding DataContext.HasAnySelectedItems}" />
                        <MenuItem
                            Command="{Binding DataContext.CopyAllCoordinatesCommand}"
                            Header="{x:Static prop:Resources.MenuLabelCopyAll}"
                            IsEnabled="{Binding HasItems}" />
                    </ContextMenu>
                </ListBox.ContextMenu>
                <ListBox.InputBindings>
                    <KeyBinding
                        Key="Delete"
                        Command="{Binding DeletePointCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=SelectedItems}" />
                </ListBox.InputBindings>
                <ListBox.Style>
                    <Style TargetType="ListBox">
                        <EventSetter Event="PreviewMouseRightButtonDown" Handler="listBox_MouseRightButtonDown" />
                        <Setter Property="IsEnabled" Value="True" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <EventSetter Event="PreviewMouseRightButtonDown" Handler="listBoxItem_MouseRightButtonDown" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        <StackPanel
            Grid.Row="1"
            MinHeight="20"
            Margin="3,3,0,0"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                Width="Auto"
                Height="Auto"
                Margin="3,3,0,0"
                Command="{Binding ClearGraphicsCommand}"
                Content="{x:Static prop:Resources.LabelClearAll}"
                ToolTip="{x:Static prop:Resources.LabelClearAllCap}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=listBoxCoordinates, Path=HasItems}" Value="True">
                                <Setter Property="IsEnabled" Value="True" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button
                Width="Auto"
                Height="Auto"
                Margin="3,3,0,0"
                Command="{Binding ImportCSVFileCommand}"
                Content="{x:Static prop:Resources.LabelImport}"
                ToolTip="{x:Static prop:Resources.LabelImportCap}" />
            <Button
                Width="Auto"
                Height="Auto"
                Margin="3,3,0,0"
                Command="{Binding SaveAsCommand}"
                Content="{x:Static prop:Resources.LabelExport}"
                ToolTip="{x:Static prop:Resources.LabelExportCap}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=listBoxCoordinates, Path=HasItems}" Value="True">
                                <Setter Property="IsEnabled" Value="True" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
